{
  "openapi": "3.0.3",
  "info": {
    "title": "HTTP API for pdjr-skplugin-alarm-manager",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "[pdjr-skplugin-alarm-manager](https://github.com/pdjr-signalk/pdjr-skplugin-alarm-manager)\nis a plugin for the\n[Signal K node server](https://github.com/SignalK/signalk-server).\n\nA Signal K server hosting the plugin will present this API under\nthe root https://*server_ip*:*server_port*/plugins/alarm-manager.\n"
  },
  "externalDocs": {
    "description": "Plugin README document",
    "url": "https://github.com/pdjr-signalk/pdjr-skplugin-alarm-manager#readme"
  },
  "paths": {
    "/keys": {
      "get": {
        "description": "Get a digest of all Signal K keys which are being monitored for\nalarm activity (i.e. all keys where the associated metadata\nincludes some zone definitions).\n",
        "responses": {
          "200": {
            "description": "Success.\nThe response body is an array containing the keys of all\ncurrently monitored data items.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error.\nThe server was unable to service the request.       \n"
          }
        }
      }
    },
    "/digest": {
      "get": {
        "description": "Get a digest of all active alarm notifications.\n",
        "responses": {
          "200": {
            "description": "Success.\nThe response body is an object with the paths of alarm\nnotifications as property names and property values which\ninclude notification and suppression details.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "notification": {
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "Alarm state of the notification."
                            },
                            "method": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "message": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "suppressedOutputs": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error.\nThe server was unable to service the request.\n"
          }
        }
      }
    },
    "/outputs": {
      "get": {
        "description": "Get the state of all configured outputs.\n",
        "responses": {
          "200": {
            "description": "Success.\nThe response body is an object with the names of alarm\noutput channels as property names and the current channel\nstate a the property value.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "additionalProperties": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error.\nThe server was unable to service the request.\n"
          }
        }
      }
    },
    "/outputs/{outputName}": {
      "get": {
        "description": "Get the current state of the output specified by {name}.\n",
        "parameters": [
          {
            "outputName": null,
            "name": "outputName",
            "in": "path",
            "description": "Identifier of the output channel whose state is required.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.\nThe response body contains the value 1 to indicate that\nthe output is ON, or 0 to indicate that the output is OFF.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                }
              }
            }
          },
          "404": {
            "description": "Error.\nThe request was invalid (bad or missing output {name}).\n"
          },
          "500": {
            "description": "Error.\nThe server was unable to service the request.\n"
          }
        }
      }
    },
    "/suppress/{outputName}": {
      "patch": {
        "description": "Suppress output on output channel {name}.\n",
        "parameters": [
          {
            "outputName": null,
            "name": "outputName",
            "in": "path",
            "description": "Identifier of the output channel which should be suppressed.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.\nOutput channel {name} has been suppressed.\n"
          },
          "404": {
            "description": "Error.\nThe request was invalid (bad or missing output {name}).\n"
          },
          "500": {
            "description": "Error.\nThe server was unable to service the request.\n"
          }
        }
      }
    },
    "/subscribe/{subscriberId}": {
      "post": {
        "description": "Add a push notification subscription to the plugin database.\n",
        "parameters": [
          {
            "subscriberId": null,
            "name": "subscriberId",
            "in": "path",
            "description": "Identifier for the new database entry.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "subscriptionObject": null,
            "name": "subscriptionObject",
            "in": "body",
            "description": "The complete subscription object returned by the client's\npush notification subscription interface.\n",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string"
                },
                "expirationTime": {
                  "type": "string"
                },
                "keys": {
                  "type": "object",
                  "properties": {
                    "p256dh": {
                      "type": "string"
                    },
                    "auth": {
                      "type": "string"
                    }
                  }
                }
              },
              "description": "Objects of this type are returned by calls to a web brower's\nPushManager.subscribe() or PushManager.getSubscription() interface\nwhen the user grants permission for push notifications.\n"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.\nThe push notification subscriptionObject was added to the\nplugin's database.\n"
          },
          "400": {
            "description": "Bad request.\nEither subscriberId or subscriptionObject were missing or\ninvalid.\n"
          },
          "500": {
            "description": "Error.\nThe server was unable to service the request.\n"
          },
          "503": {
            "description": "The plugin's database manager declined the request to save\nthe supplied data.\n"
          }
        }
      }
    },
    "/unsubscribe/{subscriberId}": {
      "delete": {
        "description": "Delete a push notification subscription from the plugin's\ndatabase.\n",
        "parameters": [
          {
            "subscriberId": null,
            "name": "subscriberId",
            "in": "path",
            "description": "Identifier for the database entry to be deleted.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.\nThe push notification subscription associated with\nsubscriberId was deleted from the plugin's database.\n"
          },
          "404": {
            "description": "Not found.\nThe push notification subscription associated with subscriberId\nwas not found in the plugin's database.\n"
          },
          "500": {
            "description": "Error.\nThe server was unable to service the request.\n"
          }
        }
      }
    },
    "/push/{subscriberId}": {
      "patch": {
        "description": "Send a test notification to an existing subscriber.\n",
        "parameters": [
          {
            "subscriberId": null,
            "name": "subscriberId",
            "in": "path",
            "description": "Identifier for subscriber who should be notified.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.\nA push notification has been sent to subscriberId.\n"
          },
          "404": {
            "description": "Not found.\nThe push notification subscription associated with subscriberId\nwas not found in the plugin's database.\n"
          },
          "500": {
            "description": "Error.\nThe server was unable to service the request.\n"
          }
        }
      }
    }
  }
}
